#ifndef PHONEMIZE_H_
#define PHONEMIZE_H_


#include <string>

#include <vector>
#include <iostream>
#include <locale>
#include <codecvt>
#include <unordered_map>
#include <algorithm>
#include "espeak-ng/speak_lib.h"


class PhonemizerEngine{
private:

    std::unordered_map<char16_t, int> _symbol_to_id = {
        {u'_', 0}, {u';', 1}, {u':', 2}, {u',', 3}, {u'.', 4}, {u'!', 5}, {u'?', 6}, {u'¡', 7}, {u'¿', 8}, {u'—', 9}, {u'…', 10},
        {u'"', 11}, {u'«', 12}, {u'»', 13}, {u'“', 14}, {u'”', 15}, {u' ', 16}, {u'A', 17}, {u'B', 18}, {u'C', 19}, {u'D', 20},
        {u'E', 21}, {u'F', 22}, {u'G', 23}, {u'H', 24}, {u'I', 25}, {u'J', 26}, {u'K', 27}, {u'L', 28}, {u'M', 29}, {u'N', 30},
        {u'O', 31}, {u'P', 32}, {u'Q', 33}, {u'R', 34}, {u'S', 35}, {u'T', 36}, {u'U', 37}, {u'V', 38}, {u'W', 39}, {u'X', 40},
        {u'Y', 41}, {u'Z', 42}, {u'a', 43}, {u'b', 44}, {u'c', 45}, {u'd', 46}, {u'e', 47}, {u'f', 48}, {u'g', 49}, {u'h', 50},
        {u'i', 51}, {u'j', 52}, {u'k', 53}, {u'l', 54}, {u'm', 55}, {u'n', 56}, {u'o', 57}, {u'p', 58}, {u'q', 59}, {u'r', 60},
        {u's', 61}, {u't', 62}, {u'u', 63}, {u'v', 64}, {u'w', 65}, {u'x', 66}, {u'y', 67}, {u'z', 68}, {u'ɑ', 69}, {u'ɐ', 70},
        {u'ɒ', 71}, {u'æ', 72}, {u'ɓ', 73}, {u'ʙ', 74}, {u'β', 75}, {u'ɔ', 76}, {u'ɕ', 77}, {u'ç', 78}, {u'ɗ', 79}, {u'ɖ', 80},
        {u'ð', 81}, {u'ʤ', 82}, {u'ə', 83}, {u'ɘ', 84}, {u'ɚ', 85}, {u'ɛ', 86}, {u'ɜ', 87}, {u'ɝ', 88}, {u'ɞ', 89}, {u'ɟ', 90},
        {u'ʄ', 91}, {u'ɡ', 92}, {u'ɠ', 93}, {u'ɢ', 94}, {u'ʛ', 95}, {u'ɦ', 96}, {u'ɧ', 97}, {u'ħ', 98}, {u'ɥ', 99}, {u'ʜ', 100},
        {u'ɨ', 101}, {u'ɪ', 102}, {u'ʝ', 103}, {u'ɭ', 104}, {u'ɬ', 105}, {u'ɫ', 106}, {u'ɮ', 107}, {u'ʟ', 108}, {u'ɱ', 109},
        {u'ɯ', 110}, {u'ɰ', 111}, {u'ŋ', 112}, {u'ɳ', 113}, {u'ɲ', 114}, {u'ɴ', 115}, {u'ø', 116}, {u'ɵ', 117}, {u'ɸ', 118},
        {u'θ', 119}, {u'œ', 120}, {u'ɶ', 121}, {u'ʘ', 122}, {u'ɹ', 123}, {u'ɺ', 124}, {u'ɾ', 125}, {u'ɻ', 126}, {u'ʀ', 127},
        {u'ʁ', 128}, {u'ɽ', 129}, {u'ʂ', 130}, {u'ʃ', 131}, {u'ʈ', 132}, {u'ʧ', 133}, {u'ʉ', 134}, {u'ʊ', 135}, {u'ʋ', 136},
        {u'ⱱ', 137}, {u'ʌ', 138}, {u'ɣ', 139}, {u'ɤ', 140}, {u'ʍ', 141}, {u'χ', 142}, {u'ʎ', 143}, {u'ʏ', 144}, {u'ʑ', 145},
        {u'ʐ', 146}, {u'ʒ', 147}, {u'ʔ', 148}, {u'ʡ', 149}, {u'ʕ', 150}, {u'ʢ', 151}, {u'ǀ', 152}, {u'ǁ', 153}, {u'ǂ', 154},
        {u'ǃ', 155}, {u'ˈ', 156}, {u'ˌ', 157}, {u'ː', 158}, {u'ˑ', 159}, {u'ʼ', 160}, {u'ʴ', 161}, {u'ʰ', 162}, {u'ʱ', 163},
        {u'ʲ', 164}, {u'ʷ', 165}, {u'ˠ', 166}, {u'ˤ', 167}, {u'˞', 168}, {u'↓', 169}, {u'↑', 170}, {u'→', 171}, {u'↗', 172},
        {u'↘', 173}, { u'̩', 175}, {u'ᵻ', 177}
    };

// Phonemizes text using espeak-ng.
// Returns phonemes for each sentence as a separate std::vector.
//
// Assumes espeak_Initialize has already been called.
private:
    std::string phonemize_eSpeak(std::string text);
public:
    PhonemizerEngine();
    void Init(std::string voice);
    ~PhonemizerEngine();
    std::vector<int64_t> text_to_sequence(const std::string& text);
};
#endif // PHONEMIZE_H_